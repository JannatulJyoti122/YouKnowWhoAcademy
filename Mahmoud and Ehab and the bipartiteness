#include <bits/stdc++.h>
using namespace std;
const int N=1e5+5;
vector<int>g[N];
int col[N];
int vis[N];
void dfs(int n,int c){
    col[n]=c;
    vis[n]=1;
    for(auto v:g[n]){
        if(!vis[v]){
            if(col[n]==1) dfs(v,2);
            else dfs(v,1);
        }
    }
}
int main() {
    int n,m;
    cin>>n;
    for(int i=0;i<n-1;i++){
        int u,v;
        cin>>u>>v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    for(int i=1;i<=n;i++){
        if(col[i]==0){
            dfs(i,1);
        }
    }
    vector<int>temp;
    for(int i=1;i<=n;i++){
        if(col[i]==1) temp.push_back(i);
    }
    int mx=n-temp.size();
    long long ans=0;
    for(int i=0;i<temp.size();i++){
        ans+=(1LL*(mx-g[temp[i]].size()));
    }
    cout<<ans<<endl;
}
