#include<bits/stdc++.h>
using namespace std;
const int N=1e5+9;
int a[N];
vector<int>grid[N];
int visited[N];
int sum[N];
int n,m;
int leaf=0;
void dfs(int node){
    visited[node]=1;
    for(int i=0;i<grid[node].size();i++){
        if(visited[grid[node][i]]==0) {
            if(a[grid[node][i]]==1) sum[grid[node][i]]+=sum[node];
            dfs(grid[node][i]);
        }
    }
}
void againdfs(int node){
    visited[node]=1;
    if(sum[node]>m) return;
    int ct=0;
    for(int i=0;i<grid[node].size();i++){
        if(visited[grid[node][i]]==0) {
            ct++;
            againdfs(grid[node][i]);
        }
    }
    if(ct==0){
        leaf++;
    }
}
int main(){
    cin>>n>>m;
    for(int i=0;i<n;i++){
        cin>>a[i+1];
        if(a[i+1]==1) sum[i+1]=1;
    }
    for(int i=0;i<n-1;i++){
        int x,y;
        cin>>x>>y;
        grid[x].push_back(y);
        grid[y].push_back(x);
    }
    dfs(1);
    for(int i=1;i<=n;i++) visited[i]=0;
    againdfs(1);
    cout<<leaf<<endl;
}
